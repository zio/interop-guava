version: 2.1

scala_211: &scala_211
  SCALA_VERSION: 2.11.12

scala_212: &scala_212
  SCALA_VERSION: 2.12.13

scala_213: &scala_213
  SCALA_VERSION: 2.13.4

jdk_8: &jdk_8
  JDK_VERSION: 8

jdk_11: &jdk_11
  JDK_VERSION: 11

machine_resource: &machine_resource
  resource_class: large

machine_ubuntu: &machine_ubuntu
  machine:
    image: ubuntu-1604:201903-01

install_jdk: &install_jdk
  - run:
      name: Install JDK
      command: |
        while $(ps aux | grep -i ' apt ' | grep -v grep > /dev/null); do sleep 1; done # Wait for apt to be ready

        # jfrog repositories with AdoptOpenJDK haven't been reliable, use Java from Ubuntu instead
        sudo rm /etc/apt/sources.list.d/*
        sudo tee /etc/apt/sources.list > /dev/null \<< 'EOF'
        deb http://mirror.math.princeton.edu/pub/ubuntu/ groovy main universe
        deb http://mirror.math.princeton.edu/pub/ubuntu/ groovy-updates main universe
        deb http://mirror.math.princeton.edu/pub/ubuntu/ groovy-backports main universe
        deb http://mirror.math.princeton.edu/pub/ubuntu/ groovy-security main restricted universe
        EOF

        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 871920D1991BC93C
        sudo apt update
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get install \
          -o "Dpkg::Options::=--force-confold" -o "Dpkg::Options::=--force-confdef" -o "APT::Immediate-Configure=false" --allow-downgrades --allow-remove-essential --allow-change-held-packages --no-install-recommends \
          openjdk-${JDK_VERSION}-jre-headless
        sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-${JDK_VERSION}-openjdk-amd64/bin/java 9999
        sudo update-alternatives --set java /usr/lib/jvm/java-${JDK_VERSION}-openjdk-amd64/bin/java
        java -version

load_cache: &load_cache
  - restore_cache:
      key: sbt-cache-interop-guava

clean_cache: &clean_cache
  - run:
      name: Clean unwanted files from cache
      command: |
        rm -fv $HOME/.ivy2/.sbt.ivy.lock
        find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
        find $HOME/.sbt        -name "*.lock"               -print -delete

save_cache: &save_cache
  - save_cache:
      key: sbt-cache-interop-guava
      paths:
          - "~/.ivy2/cache"
          - "~/.sbt"
          - "~/.m2"
          - "~/.cache"

compile: &compile
  steps:
    - checkout
    - <<: *load_cache
    - run:
        name: Compile code
        command: ./sbt ++${SCALA_VERSION}! compile
    - <<: *clean_cache
    - <<: *save_cache

filter_tags: &filter_tags
  tags:
    only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

lint: &lint
  steps:
    - checkout
    - <<: *load_cache
    - run:
        name: Lint code
        command: ./sbt ++${SCALA_VERSION}! check
    - <<: *clean_cache
    - <<: *save_cache

testJVM: &testJVM
  steps:
    - checkout
    - <<: *load_cache
    - <<: *install_jdk
    - run:
        name: Run tests
        command: ./sbt ++${SCALA_VERSION}! test
    - <<: *clean_cache
    - <<: *save_cache
    - store_test_results:
        path: core-tests/jvm/target/test-reports

release: &release
  steps:
      - checkout
      - run:
          name: Fetch git tags
          command: git fetch --tags
      - <<: *load_cache
      - run: 
          name: Write sonatype credentials
          command: echo "credentials += Credentials(\"Sonatype Nexus Repository Manager\", \"oss.sonatype.org\", \"${SONATYPE_USER}\", \"${SONATYPE_PASSWORD}\")" > ~/.sbt/1.0/sonatype.sbt
      - run:
          name: Write PGP public key
          command: echo -n "${PGP_PUBLIC}" | base64 -di > /tmp/public.asc
      - run:
          name: Write PGP secret key
          command: echo -n "${PGP_SECRET}" | base64 -di > /tmp/secret.asc
      - run:
          name: Release artifacts
          command: |
            mkdir -p $HOME/bin
            sudo apt-get update && sudo apt-get -y install gnupg2
            echo pinentry-mode loopback >> ~/.gnupg/gpg.conf
            echo allow-loopback-pinentry >> ~/.gnupg/gpg-agent.conf
            chmod 600 ~/.gnupg/*
            ln -s /usr/bin/gpg2 $HOME/bin/gpg
            $HOME/bin/gpg --version
            echo RELOADAGENT | gpg-connect-agent
            echo $PGP_SECRET | base64 -di | gpg2 --import --no-tty --batch --yes
            PATH=$HOME/bin:$PATH ./sbt ++${SCALA_VERSION}! clean ci-release

jobs:
  lint:
    <<: *lint
    <<: *machine_ubuntu
    environment:
      - <<: *scala_212
      - <<: *jdk_8

  test_211_jdk8_jvm:
    <<: *testJVM
    <<: *machine_ubuntu
    <<: *machine_resource
    environment:
      - <<: *scala_211
      - <<: *jdk_8

  test_212_jdk8_jvm:
    <<: *testJVM
    <<: *machine_ubuntu
    <<: *machine_resource
    environment:
      - <<: *scala_212
      - <<: *jdk_8

  test_213_jdk8_jvm:
    <<: *testJVM
    <<: *machine_ubuntu
    <<: *machine_resource
    environment:
      - <<: *scala_213
      - <<: *jdk_8

  test_213_jdk11_jvm:
    <<: *testJVM
    <<: *machine_ubuntu
    <<: *machine_resource
    environment:
      - <<: *scala_213
      - <<: *jdk_11

  release:
    <<: *release
    <<: *machine_ubuntu
    environment:
      - <<: *scala_213
      - <<: *jdk_8

workflows:
  version: 2
  build:
    jobs:
      - lint:
          filters:
            <<: *filter_tags
      - test_211_jdk8_jvm:
          requires:
            - lint
          filters:
            <<: *filter_tags
      - test_212_jdk8_jvm:
          requires:
            - lint
          filters:
            <<: *filter_tags
      - test_213_jdk8_jvm:
          requires:
            - lint
          filters:
            <<: *filter_tags
      - test_213_jdk11_jvm:
          requires:
            - lint
          filters:
            <<: *filter_tags
      - release:
          context: Sonatype2
          requires:
            - test_211_jdk8_jvm
            - test_212_jdk8_jvm
            - test_213_jdk8_jvm
            - test_213_jdk11_jvm
          filters:
            <<: *filter_tags
            branches:
              only:
                - master
